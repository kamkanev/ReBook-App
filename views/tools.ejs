<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <link rel="apple-touch-icon" sizes="76x76" href="../img/apple-icon.png">
  <link rel="icon" type="image/png" href="../img/rebook_main_logo.png">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
  <title>
    Бяла дъска
  </title>
  <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0, shrink-to-fit=no' name='viewport' />
  <!--     Fonts and icons     -->
  <link href="https://fonts.googleapis.com/css?family=Montserrat:400,700,200" rel="stylesheet" />
  <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.7.1/css/all.css" integrity="sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr" crossorigin="anonymous">
  <!-- CSS Files -->
  <link href="../css/bootstrap.min.css" rel="stylesheet" />
  <link href="../css/now-ui-dashboard.css?v=1.5.0" rel="stylesheet" />
  <!-- CSS Just for demo purpose, don't include it in your project -->
  <link href="../css/demo.css" rel="stylesheet" />
</head>

<body class="" onload="init()">
  <div class="wrapper ">
      <b>
    <div class="sidebar" data-color="<%= typeof user.menucolor != 'undefined' ? user.menucolor : 'blue' %>">
      <!--
        Tip 1: You can change the color of the sidebar using: data-color="blue | green | orange | red | yellow"
    -->
      <div class="logo">
        <a class="simple-text logo-normal">
		  <img style = "width: 40px;" src="../img/rebook_main_logo.png" alt="" />
          <b>ReBook App</b>
        </a>
      </div>
      <div class="sidebar-wrapper" id="sidebar-wrapper">
        <ul class="nav">
          <li>
            <a href="/profile">
              <i class="now-ui-icons design_app"></i>
              <p>Начало</p>
            </a>
          </li>
          <li >
            <a href="/profile/classrooms">
              <i class="fas fa-comments"></i>
              <p>Класни стаи</p>
            </a>
          </li>
		  <li>
            <a href="/profile/ebooks">
              <i class="fas fa-book-open"></i>
              <p>Електронна тетрадка</p>
            </a>
          </li>
          <li class="active ">
                <a href="/profile/tools">
                  <i class="fas fa-chalkboard"></i>
                  <p>Бяла дъска</p>
                </a>
              </li>
            <li>
            <a href="/profile/calendar">
              <i class="fas fa-calendar-check"></i>
              <p>Календар</p>
            </a>
          </li>
          <li>
            <a href="/profile/user">
              <i class="now-ui-icons users_single-02"></i>
              <p>Моят профил</p>
            </a>
          </li>
          <li class="active-pro">
            <a href="/profile/settings">
              <i class="now-ui-icons loader_gear"></i>
              <p>Настройки</p>
            </a>
          </li>
        </ul>
      </div>
    </div>
	</b>
    <div class="main-panel" id="main-panel">

      <!-- Navbar -->
      <nav class="navbar navbar-expand-lg navbar-transparent  bg-primary  navbar-absolute" id="goren_bar">
        <div class="container-fluid">
          <div class="navbar-wrapper">
            <div class="navbar-toggle">
              <button type="button" class="navbar-toggler">
                <span class="navbar-toggler-bar bar1"></span>
                <span class="navbar-toggler-bar bar2"></span>
                <span class="navbar-toggler-bar bar3"></span>
              </button>
            </div>
            <a class="navbar-brand" style = "font-size: 15pt"><b>Бяла дъска</b></a>
          </div>
          <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navigation" aria-controls="navigation-index" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-bar navbar-kebab"></span>
            <span class="navbar-toggler-bar navbar-kebab"></span>
            <span class="navbar-toggler-bar navbar-kebab"></span>
          </button>
          <div class="collapse navbar-collapse justify-content-end" id="navigation">
            <form>
              <div class="input-group no-border">
                <input type="text" value="" class="form-control" placeholder="Search...">
                <div class="input-group-append">
                  <div class="input-group-text">
                    <i class="now-ui-icons ui-1_zoom-bold"></i>
                  </div>
                </div>
              </div>
            </form>
            <ul class="navbar-nav">
              <li class="nav-item dropdown ">
                <a class="nav-link dropdown-toggle" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                  <i class="now-ui-icons users_single-02"></i>
                  <p>
                    <span class="d-lg-none d-md-block">За мен</span>
                  </p>
                </a>
                <div class="dropdown-menu dropdown-menu-right " aria-labelledby="navbarDropdownMenuLink">
                  <a class="dropdown-item" href="/profile/user"> <i class="now-ui-icons users_single-02"></i><b>Профил</b></a>
                  <a class="dropdown-item" href="/profile/settings"><i class="now-ui-icons loader_gear"></i><b>Настройки</b></a>
                  <a class="dropdown-item" style = "color: #db0f0f" href="/auth/logout"><i class="fas fa-sign-out-alt"></i><b>Изход от профил</b></a>
                </div>
              </li>
            </ul>
          </div>
        </div>
      </nav>
      <!-- End Navbar -->
      <div class="panel-header panel-header-sm">
      </div>
      <div class="content">
        <div class="row">
          <div class="col-md-12">
            <div class="card">
              <div class="card-header">
                <h5 class="title"></h5>
                <!--<p class="category"><a href=""></a></p>-->
              </div>

              <div class="card-body all-icons">
                  <!--<div class="font-icon-list col-lg-12 col-md-3 col-sm-4 col-xs-6 col-xs-6">
                    <!--<div class="font-icon-detail">
                      <!--<i class="now-ui-icons arrows-1_cloud-download-93"></i>
                      <!--<p>arrows-1_cloud-download-93</p>
                    <!--</div>
                  <!--</div><br>-->

                  <canvas style="border: 1px solid black;" id="canvas-id"></canvas>

                  <br>
                  <div id="context-menu">
                      <div class="item">
                        <input type="color" id="colorP" value="#000000">
                      </div>
                      <div class="item">
                        <input type="number" id="sizeP" value="1">
                      </div>
                      <div class="item">
                        <input type="radio" name="brushType" value="-1" checked>
                        <input type="radio" name="brushType" value="0">
                        <input type="radio" name="brushType" value="1">
                        <input type="radio" name="brushType" value="2">
                      </div>
                    </div>
                  <script>
                      window.addEventListener("contextmenu",function(event){
                      event.preventDefault();
                      var contextElement = document.getElementById("context-menu");
                      contextElement.style.top = event.offsetY + "px";
                      contextElement.style.left = event.offsetX + "px";
                      contextElement.classList.add("active");
                      });
                      window.addEventListener("click",function(){
                      document.getElementById("context-menu").classList.remove("active");
                      });
                  </script>
                  <script>
                      if(endlessCanvas == undefined){
                          var endlessCanvas = false;
                      }
                      var canvas = document.getElementById("canvas-id");
                      if(endlessCanvas){
                          canvas.width = window.innerWidth;
                          canvas.height = window.innerHeight;

                          window.onresize = function (){
                              canvas.width = window.innerWidth;
                              canvas.height = window.innerHeight;
                          };
                      }
                      else
                      {
                          canvas.width = document.getElementsByClassName("card-body all-icons")[0].getBoundingClientRect().width;
                          canvas.height = 600;
                      }
                      var context = canvas.getContext("2d");
                      context.fillStyle = "#0000ff";
                      // global variables with mouse coordinates
                      var mouseX = 0;
                      var mouseY = 0;
                      var globHei = document.getElementsByClassName("card-body all-icons")[0].offsetHeight - canvas.height;//main-panel
                      var glWid = document.getElementsByClassName("card-body all-icons")[0].getBoundingClientRect().x;
                      //(document.getElementById("sidebar-wrapper").getBoundingClientRect().x < 0) ? 0 : document.getElementById("sidebar-wrapper").getBoundingClientRect().width;

                      // some keycodes
                      var key_left = 37;
                      var key_up = 38;
                      var key_right = 39;
                      var key_down = 40;
                      var key_a = 65;
                      var key_z = 90;

                      var isKeyPressed = [];
                      for (i = 0; i < 256; ++i) {
                          isKeyPressed.push(0);
                      }

                      // gridSize = 50; // uncomment or add to game.js if you want a grid

                      var reqAnimationFrame =
                          window.requestAnimationFrame ||
                          window.mozRequestAnimationFrame ||
                          window.webkitRequestAnimationFrame ||
                          window.msRequestAnimationFrame ||
                          function (callback) {
                              setTimeout(callback, 1000 / 30);
                          };

                      function redraw() {
                          context.clearRect(0, 0, canvas.width, canvas.height);
                          context.globalAlpha = 1;

                          // draw grid
                          //context.fillStyle = "#FF0000";
                          context.font = "10px Arial";
                          if (typeof gridSize != "undefined" && gridSize >= 25) {
                              context.fillText(0, 4, 10);
                              context.beginPath();
                              for (i = gridSize; i < canvas.width; i += gridSize) {
                                  context.moveTo(i, 0);
                                  context.lineTo(i, canvas.height);
                                  context.fillText(i, i + 4, 10);
                              }
                              for (i = gridSize; i < canvas.height; i += gridSize) {
                                  context.moveTo(0, i);
                                  context.lineTo(canvas.width, i);
                                  context.fillText(i, 4, i + 10);
                              }
                              context.stroke();
                          }

                          draw(); // call progammer's draw() function

                          reqAnimationFrame(redraw);
                      };

                      function callupdate() {
                        glWid = document.getElementsByClassName("card-body all-icons")[0].getBoundingClientRect().x;
                        canvas.width = document.getElementsByClassName("card-body all-icons")[0].getBoundingClientRect().width;
                        //glWid = (document.getElementById("sidebar-wrapper").getBoundingClientRect().x < 0) ? 0 : document.getElementById("sidebar-wrapper").getBoundingClientRect().width;
                          update(); // call programmer's update() function
                          setTimeout(callupdate, 10); // and 10 ms after that ...
                      };

                      function areColliding(Ax, Ay, Awidth, Aheight, Bx, By, Bwidth, Bheight) {
                          if (Bx <= Ax + Awidth) {
                              if (Ax <= Bx + Bwidth) {
                                  if (By <= Ay + Aheight) {
                                      if (Ay <= By + Bheight) {
                                          return 1;
                                      }
                                  }
                              }
                          }
                          return 0;
                      };

                      function init() {
                          if ('ontouchstart' in window || navigator.maxTouchPoints) {
                            isMobile = true;
                              window.addEventListener("touchstart", function (e) {
                                  var touchobj = e.changedTouches[0];
                                  mouseX = parseInt(touchobj.pageX - canvas.offsetLeft)-glWid;
                                  mouseY = parseInt(touchobj.pageY - canvas.offsetTop) - globHei;
                                  mousedown();
                              });

                              window.addEventListener("touchend", function (e) {
                                  var touchobj = e.changedTouches[0];
                                  mouseX = parseInt(touchobj.pageX - canvas.offsetLeft)-glWid;
                                  mouseY = parseInt(touchobj.pageY - canvas.offsetTop) - globHei;
                                  mouseup();
                              });
                              window.addEventListener("touchmove", function (e) {
                                  var touchobj = e.changedTouches[0];
                                  mouseX = parseInt(touchobj.pageX - canvas.offsetLeft)-glWid;
                                  mouseY = parseInt(touchobj.pageY - canvas.offsetTop) - globHei;
                              });
                          } else {
                              window.addEventListener("mousemove", function (e) {
                                  mouseX = e.pageX - canvas.offsetLeft - glWid;
                                  mouseY = e.pageY - canvas.offsetTop - globHei;
                              });

                              if (typeof mousemove != "undefined") {
                                  window.addEventListener("mousemove", mousemove);
                              }
                              if (typeof mouseup != "undefined") {
                                  window.addEventListener("mouseup", mouseup);
                              }
                              if (typeof mousedown != "undefined") {
                                  window.addEventListener("mousedown", mousedown);
                              }

                              if (typeof keydown != "undefined") {
                                  window.addEventListener("keydown", function (e) {
                                      isKeyPressed[e.keyCode] = 1;
                                      keydown(e.keyCode);
                                  });
                              } else {
                                  window.addEventListener("keydown", function (e) {
                                      isKeyPressed[e.keyCode] = 1;
                                  });
                              }
                              if (typeof keyup != "undefined") {
                                  window.addEventListener("keyup", function (e) {
                                      isKeyPressed[e.keyCode] = 0;
                                      keyup(e.keyCode);
                                  });
                              } else {
                                  window.addEventListener("keyup", function (e) {
                                      isKeyPressed[e.keyCode] = 0;
                                  });
                              }
                          }
                          if (typeof draw == "undefined") {
                              redraw = function () {
                                  context.clearRect(0, 0, canvas.width, canvas.height);
                                  context.globalAlpha = 1;
                                  context.fillStyle = "#FF0000";
                                  context.font = "20px Arial";
                                  context.fillText("Press <F12> for error info!", 40, 40);
                              };
                          }
                          redraw();
                          callupdate();
                      };

                  </script>
                  <script src="../js/classes.js"></script>
                  <script src="../js/functions.js"></script>
                  <script src="../js/game.js"></script>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <%- include('./runners/daylilogin') %>
  <!--   Core JS Files   -->
  <script src="../js/core/jquery.min.js"></script>
  <script src="../js/core/popper.min.js"></script>
  <script src="../js/core/bootstrap.min.js"></script>
  <script src="../js/plugins/perfect-scrollbar.jquery.min.js"></script>
  <!-- Chart JS -->
  <script src="../js/plugins/chartjs.min.js"></script>
  <!--  Notifications Plugin    -->
  <!-- Control Center for Now Ui Dashboard: parallax effects, scripts for the example pages etc -->
  <script src="../js/now-ui-dashboard.min.js?v=1.5.0" type="text/javascript"></script><!-- Now Ui Dashboard DEMO methods, don't include it in your project! -->
  <script src="../js/demo.js"></script>
</body>

</html>
